{
	"info": {
		"_postman_id": "3c6fd201-76bc-46a1-b7bd-f4baeef452d8",
		"name": "SWTP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get main json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "123456789",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001",
					"host": [
						"localhost"
					],
					"port": "4001"
				}
			},
			"response": []
		},
		{
			"name": "AUTH with right credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Right credentials return 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "username",
						"value": "admin",
						"type": "text"
					},
					{
						"key": "password",
						"value": "12345",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:4001/auth",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "AUTH with wrong credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Wrong credentials return 403\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 403]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "username",
						"value": "adminn",
						"type": "text"
					},
					{
						"key": "password",
						"value": "12345",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:4001/auth",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register client",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imei\": \"998877\",\r\n    \"name\": \"RoboTaxi1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/register",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Data received\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"imei\": 998877,\r\n        \"latitude\": 50.58508968790418, \r\n        \"longitude\": 8.67947739171502\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/post",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"post"
					],
					"query": [
						{
							"key": "token",
							"value": "123456789",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset GET ALL CURRENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body ok\", function () {\r",
							"    pm.expect(pm.response.text()).to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/current",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"998877\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "123456789"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/users",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user by id",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"imei\": 998877,\r\n    \"zone\": \"Gie√üen\",\r\n    \"name\": \"Max Mustermann\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/users/1",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/users/1",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset GET CURRENT BY ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body should be empty as user with id does not exist\", \r",
							"function () {\r",
							"    pm.response.to.have.body(\"[]\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/current/100",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"current",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset GET HISTORY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/history",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"history"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset GET HISTORY BY ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body should be empty as user with id does not exist\", \r",
							"function () {\r",
							"    pm.response.to.have.body(\"[]\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/history/100",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"history",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset RESET HISTORY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Unauthorized\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/reset",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"reset"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dataset RESET HISTORY BY ID",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/reset/99",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"reset",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Zone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Added zone\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Hanau\",\r\n    \"latitude\": \"2222\",\r\n    \"longitude\": \"2\",\r\n    \"radius\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/zone",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"zone"
					]
				}
			},
			"response": []
		},
		{
			"name": "REMOVE zone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"As zone not existing, request should result 400\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "123456789",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"notexisting\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:4001/zone",
					"host": [
						"localhost"
					],
					"port": "4001",
					"path": [
						"zone"
					]
				}
			},
			"response": []
		}
	]
}